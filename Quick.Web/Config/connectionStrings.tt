<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\Quick.Data\bin\Debug\Quick.Data.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Quick.Data" #>
<#@ output extension=".config" #>
<?xml version="1.0" encoding="utf-8"?>
<!-- 
	* ==============================================================================
	* 命名空间：Quick.Web
	* 类 名 称：db.config
	* 创 建 者：Qing
	* 创建时间：2018-05-28 15:54:52
	* CLR 版本：4.0.30319.42000
	* 保存的文件名：db.config
	* 文件版本：V1.0.0.0
	*
	* 功能描述：N/A 
	*
	* 修改历史：
	*
	*
	* ==============================================================================
	*         CopyRight @ 班纳工作室 2018. All rights reserved
	* ==============================================================================
-->
 <connectionStrings>
    <!-- 主机名(127.0.0.1):端口号(默认6379)：1270.0.01:6379 -->
    <!-- allowAdmin： -->
    <!-- password： -->
    <!-- defaultdatabase：  -->    
    <!-- ConfigurationOptions 包含大量的配置选项，一些常用的配置如下：
    
        abortConnect ： 当为true时，当没有可用的服务器时则不会创建一个连接
        allowAdmin ： 当为true时 ，可以使用一些被认为危险的命令
        channelPrefix：所有pub/sub渠道的前缀
        connectRetry ：重试连接的次数
        connectTimeout：超时时间
        configChannel： Broadcast channel name for communicating configuration changes
        defaultDatabase ： 默认0到-1,Redis默认的配置会生成db0~db15共16个db,如果没有指定用哪一个db则默认使用db0
        keepAlive ： 保存x秒的活动连接
        name:ClientName
        password:password
        proxy:代理 比如 twemproxy
        resolveDns : 指定dns解析
        serviceName ： Not currently implemented (intended for use with sentinel)
        ssl={bool} ： 使用ssl加密
        sslHost={string} ： 强制服务器使用特定的ssl标识
        syncTimeout={int} ： 异步超时时间
        tiebreaker={string}：Key to use for selecting a server in an ambiguous master scenario
        version={string} ： Redis version level (useful when the server does not make this available)
        writeBuffer={int} ： 输出缓存区的大小      
    -->
  <add name="RedisHosts" connectionString="192.168.191.78:6379,allowadmin=true,password=123456,abortConnect=false"/>
<# if(QuickDbProvider.IsSqlServer) { #>
  <!--SQL SERVER 启用下面一行，注意数据库文件路径中使用了|DataDirectory|宏变量，该变量只在ASP.NET项目中有效-->
  <add name="MssqlDbContext" connectionString="Data Source=.;Initial Catalog=Qucik_V1.0;User Id=sa;Password=sa1994sa;connect Timeout=30" providerName="System.Data.SqlClient" />
  <!--<add name="MssqlDbContext" connectionString="Data Source=.;Initial Catalog=Qucik_V1.0;User Id=sa;Password=sa1994sa;AttachDBFilename=|DataDirectory|\Qucik_V1.0.mdf;connect Timeout=30" providerName="System.Data.SqlClient" />-->
<# } else if(QuickDbProvider.IsAccess) { #>
  <!--Access启用下面一行，可以试试使用DataDirectory目录： Provider=Microsoft.Jet.OLEDB.4.0;Data Source="|DataDirectory|\Database.mdb";Persist Security Info=True -->
  <add name="AccessDbContext" connectionString="Provider=Microsoft.ACE.OleDb.12.0;Data Source='C:\Quick_V1.0.mdb';Persist Security Info=False;" providerName="JetEntityFrameworkProvider" />
<# } else if(QuickDbProvider.IsMySql) { #>
  <!--MySQL启用下面一行-->
  <add name="MySqlDbContext" connectionString="Data Source=localhost;Port=3306;Initial Catalog=Qucik_V1.0;User Id=root;Password=1010;Character Set=utf8;Allow User Variables=True" providerName="MySql.Data.MySqlClient" />
<# } else if(QuickDbProvider.IsSqlite) { #>
  <!--Sqlite启用下面一行，在连接字符串中加入【BinaryGUID=False”】，指定GUID按照字符串存储，也就是说Model中的字段类型依然是GUID，但是数据中却存的是text。-->
  <add name="SqliteDbContext" connectionString="Data Source='C:\Qucik_V1.0.db';BinaryGUID=False" providerName="System.Data.SQLite.EF6" />
<# } else if(QuickDbProvider.IsNpgsql) { #>
  <!-- Npgsql启用下面一行 -->
  <add name="NpgsqlDbContext" connectionString="Server=localhost;Database=Qucik_V1.0;User Id=sa;Password=sa1994sa;" providerName="Npgsql" />
<# } #>
 </connectionStrings>