<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\Quick.Data\bin\Debug\Quick.Data.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Quick.Data" #>
<#@ output extension=".config" #>
<?xml version="1.0" encoding="utf-8"?>
<!-- 
	* ==============================================================================
	* 命名空间：Quick.Web
	* 类 名 称：entityFramework.config
	* 创 建 者：Qing
	* 创建时间：2018-05-28 15:54:52
	* CLR 版本：4.0.30319.42000
	* 保存的文件名：entityFramework.config
	* 文件版本：V1.0.0.0
	*
	* 功能描述：N/A 
	*
	* 修改历史：
	*
	*
	* ==============================================================================
	*         CopyRight @ 班纳工作室 2018. All rights reserved
	* ==============================================================================
-->

<# if(QuickDbProvider.IsSqlServer) { #>
 <!-- SQL Server配置 Start -->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <!-- SQL Server配置 End -->
<# } else if(QuickDbProvider.IsAccess) { #>
  <!-- Access配置 Start -->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="JetEntityFrameworkProvider" type="JetEntityFrameworkProvider.JetProviderServices, JetEntityFrameworkProvider"/>
    </providers>
  </entityFramework>
  <!-- Access配置 End -->
<# } else if(QuickDbProvider.IsMySql) { #>
  <!-- MySQL配置 Start -->
  <entityFramework codeConfigurationType="MySql.Data.Entity.MySqlEFConfiguration, MySql.Data.Entity.EF6">
    <defaultConnectionFactory type="MySql.Data.Entity.MySqlConnectionFactory, MySql.Data.Entity.EF6">
      <parameters>
        <parameter value="v13.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="MySql.Data.MySqlClient" type="MySql.Data.MySqlClient.MySqlProviderServices, MySql.Data.Entity.EF6, Version=6.9.12.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d"></provider>
    </providers>
  </entityFramework>
  <!-- MySQL配置 End -->
<# } else if(QuickDbProvider.IsSqlite) { #>
  <!-- Sqlite配置 Start -->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v13.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SQLite" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
      <provider invariantName="System.Data.SQLite.EF6" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
    </providers>
  </entityFramework>
  <!-- Sqlite配置 End -->
<# } else if(QuickDbProvider.IsNpgsql) { #>
  <!-- Npgsql配置 Start -->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="Npgsql" type="Npgsql.NpgsqlServices, Npgsql.EntityFramework" />
    </providers>
  </entityFramework>
  <!-- Npgsql配置 End -->
<# } #>